线段树

情景：从数组里面找到某个区间内的最小值（最大值）或根据区间元素经过某种逻辑处理得到的结果，
数组大小固定，数组中的元素值可以随时更新

想法可能就是二重循环 得到每一个[i,j]的处理结果
这样时间复杂度 就是 n^2 在数据量较大的情况下就不满足查询的效率要求了
更何况数组的元素还在变化，

而线段树 就是应用于这种区间处理的问题，
由于其具有树的结构特性（就像我们使用数组来实现二叉树的思想）

预处理耗时o(n)、查询、更新操作 o(n) 额外的空间o(n)

对于每一个子节点而言，都表示整个序列中的一段子区间；
对于每个叶子节点而言，都表示序列中的单个元素信息；
子节点不断向自己的父亲节点传递信息，而父节点存储的信息则是他的每一个子节点信息的整合。


有没有觉得很熟悉？对，线段树就是分块思想的树化，
或者说是对于信息处理的二进制化——用于达到O(logn)级别的处理速度，log以2为底。
（其实以几为底都只不过是个常数，可忽略)。而分块的思想，则是可以用一句话总结为：
通过将整个序列分为有穷个小块，对于要查询的一段区间，总是可以整合成k个所分块与m个单个元素的信息的并(0≤k,m≤sqrt{n})。但普通的分块不能高效率地解决很多问题，所以作为log级别的数据结构，线段树应运而生。


线段树可以解决的问题举例
RMQ、RSQ


学习过程参考的链接如下

————————————————
版权声明：本文为CSDN博主「xushiyu1996818」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/xushiyu1996818/article/details/90293988

https://www.cnblogs.com/strongmore/p/14223224.html